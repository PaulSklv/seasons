{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","_this2","setState","coords","latitude","err","console","log","this","src_SeasonDisplay_0","src_Spinner","renderContent","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"uPAGMA,SAAe,CACnBC,OAAQ,CACNC,KAAM,uBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,qBACNC,SAAU,eAwBCE,EAbO,SAAAC,GACpB,IARiBC,EAAKC,EAQhBC,GARWF,EAQQD,EAAMC,KARTC,GAQc,IAAIE,MAAOC,YAPnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAGDK,EAEFZ,EAAaS,GAAhCP,EAFqBU,EAErBV,KAAMC,EAFeS,EAEfT,SAEd,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IAChCI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAuBd,EAAvB,WACZU,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBd,EAAxB,aC3BZe,EAAU,SAACZ,GACf,OACEO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACZV,EAAMa,WAMfD,EAAQE,aAAe,CACrBD,QAAS,cAIID,QCZTG,6MACJC,MAAQ,CACNf,IAAK,KACLgB,aAAc,0MAIdC,OAAOC,UAAUC,YAAYC,mBAC3B,SAAAC,GAAQ,OAAIC,EAAKC,SAAS,CAACvB,IAAKqB,EAASG,OAAOC,YAChD,SAAAC,GAAG,OAAIJ,EAAKC,SAAS,CAACP,aAAcU,EAAId,sJAK1Ce,QAAQC,IAAI,0FAIZ,OAAGC,KAAKd,MAAMC,eAAiBa,KAAKd,MAAMf,IACjCM,EAAAC,EAAAC,cAAA,qBAAaqB,KAAKd,MAAMC,eAG7Ba,KAAKd,MAAMC,cAAgBa,KAAKd,MAAMf,IACjCM,EAAAC,EAAAC,cAACsB,EAAD,CAAe9B,IAAK6B,KAAKd,MAAMf,MAGjCM,EAAAC,EAAAC,cAACuB,EAAD,CAASnB,QAAQ,oEAIxB,OACEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZoB,KAAKG,wBAhCIC,IAAMC,WAwCxBC,IAASC,OAAO9B,EAAAC,EAAAC,cAAC6B,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.71d2cf62.chunk.js","sourcesContent":["import './SeasonDisplay.css';\r\nimport React from \"react\";\r\n\r\nconst seasonConfig = {\r\n  summer: {\r\n    text: \"Let's hit the beach!\",\r\n    iconName: \"sun\"\r\n  },\r\n  winter: {\r\n    text: \"Burr, it's chilly!\",\r\n    iconName: \"snowflake\"\r\n  }\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 0 ? \"summer\" : \"winter\";\r\n  } else {\r\n    return lat > 0 ? \"winter\" : \"summer\";\r\n  }\r\n};\r\nconst SeasonDisplay = props => {\r\n  const season = getSeason(props.lat, new Date().getMonth());\r\n  const { text, iconName } = seasonConfig[season];\r\n\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`icon-left massive ${iconName} icon`} />\r\n      <h1>{text}</h1>\r\n      <i className={`icon-right massive ${iconName} icon`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from 'react';\r\n\r\nconst Spinner = (props) => {\r\n  return (\r\n    <div className='ui active dimmer'>\r\n      <div className='ui big text loader'>\r\n        {props.message}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  message: 'Loading...'\r\n};\r\n\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from './Spinner';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    lat: null,\r\n    errorMessage: ''\r\n  };\r\n\r\n  async componentDidMount(){\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      position => this.setState({lat: position.coords.latitude}), \r\n      err => this.setState({errorMessage: err.message})\r\n      );\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    console.log('My component was just updated - it rerendered!');\r\n  }\r\n\r\n  renderContent() {\r\n    if(this.state.errorMessage && !this.state.lat){\r\n      return <div>Error: {this.state.errorMessage}</div>\r\n    }\r\n\r\n    if(!this.state.errorMessage && this.state.lat){\r\n      return <SeasonDisplay lat={this.state.lat} />;\r\n    }\r\n\r\n    return <Spinner message=\"Please accept location request\"/>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"border red\">\r\n        {this.renderContent()}\r\n      </div>\r\n    )\r\n  }    \r\n}\r\n\r\n\r\n\r\nReactDOM.render(<App/ >, document.querySelector('#root'));"],"sourceRoot":""}